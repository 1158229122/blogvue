import axios from 'axios'
import qs from 'qs'
import SecurityUtils from './SecurityUtils'

function errorState(response) {
  // 如果http状态码正常，则直接返回数据
  if(response && (response.status === 200 || response.status === 304 || response.status === 400)) {
    console.log(response);
    return response
  }

}
const httpServer = (opts, data) => {
  let token = localStorage.getItem("token");
  let userId = localStorage.getItem("userID");
  let timestamp=new Date().getTime();
  let sign;
  if (opts.method == 'get' || opts.method == 'post') {
    sign = SecurityUtils.getSign(data, timestamp, token, userId);
  } else {
    sign = SecurityUtils.getSign({'source':data.get('source')},timestamp, token, userId);
  }
  let baseUrl;
  //1表示真实环境0表示测试环境
  localStorage.setItem("isProduction",0);
  if(localStorage.getItem("isProduction")==1){
    //真实环境暂无服务器

  }else {
    //测试环境
    baseUrl = "http://192.168.1.175:9001/blogs/";
  }

  let Public = { //公共参数
    "token": token,
    "userID": userId,
    "sign": sign,
    "timestamp": timestamp
  }


  let httpDefaultOpts;

  if (opts.method == 'get' || opts.method == 'post') {
    httpDefaultOpts = httpDefaultOpts = { //http默认配置
      method: opts.method,
      baseURL: baseUrl,
      url: opts.url,
      timeout: 15000,
      params: Object.assign(Public, data),
      data: qs.stringify(Object.assign(Public, data)),
      headers: opts.method == 'get' ? {
        'X-Requested-With': 'XMLHttpRequest',
        "Accept": "application/json",
        "Content-Type": "application/json; charset=UTF-8",
      } : {
        'X-Requested-With': 'XMLHttpRequest',
        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
      }

    }

    if (opts.method == 'get') {
      delete httpDefaultOpts.data
    } else {
      delete httpDefaultOpts.params
    }
  } else {
    data.append("timestamp", timestamp);
    data.append("token", token, );
    data.append("userID", userId);
    data.append("sign", sign);
    httpDefaultOpts = { //http默认配置
      method: 'post',
      baseURL: baseUrl,
      url: opts.url,
      timeout: 15000,
      data: data,
      headers: {
        'Content-Type': 'multipart/form-data',
      }
    }
  }

  let promise = new Promise(function(resolve, reject) {
    axios(httpDefaultOpts).then(
      (res) => {
        if(100!=res.data.code) {
          if(res.data.code==121 ||res.data.code==122||res.data.code==123){
            //登录
            this.$router.push({
              path:"/login"
            })
          }else{
            reject(res.data);
          }
        } else {
          resolve(res.data.data);
        }
      }
    ).catch((response) => {
        reject(errorState(response))
      }
    )
  })
  return promise
}

export default httpServer
